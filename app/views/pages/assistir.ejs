<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Treino de Braço</title>
  <link rel="stylesheet" href="../../css/assistir.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <style>
    /* Estilos do player de vídeo */
    .video-player {
      position: relative;
      width: 100%;
      max-width: 900px;
      margin: 0 auto;
      background: #000;
      border-radius: 12px;
      overflow: hidden;
    }

    .video-player video {
      width: 100%;
      display: block;
    }

    /* Controles do vídeo */
    .video-controls {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background: linear-gradient(to top, rgba(0,0,0,0.9), transparent);
      padding: 20px 15px 15px;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .video-player:hover .video-controls,
    .video-controls.show {
      opacity: 1;
    }

    /* Barra de progresso */
    .progress-bar {
      width: 100%;
      height: 6px;
      background: rgba(255,255,255,0.3);
      border-radius: 3px;
      cursor: pointer;
      margin-bottom: 12px;
      position: relative;
    }

    .progress-bar:hover {
      height: 8px;
    }

    .progress-filled {
      height: 100%;
      background: #214CCE;
      border-radius: 3px;
      width: 0%;
      transition: width 0.1s linear;
      position: relative;
    }

    .progress-filled::after {
      content: '';
      position: absolute;
      right: -6px;
      top: 50%;
      transform: translateY(-50%);
      width: 12px;
      height: 12px;
      background: #fff;
      border-radius: 50%;
      opacity: 0;
      transition: opacity 0.2s;
    }

    .progress-bar:hover .progress-filled::after {
      opacity: 1;
    }

    /* Botões de controle */
    .controls-wrapper {
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 10px;
    }

    .controls-left,
    .controls-right {
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .control-btn {
      background: none;
      border: none;
      color: white;
      font-size: 20px;
      cursor: pointer;
      padding: 5px;
      transition: transform 0.2s, color 0.2s;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .control-btn:hover {
      color: #214CCE;
      transform: scale(1.1);
    }

    .control-btn.play-pause {
      font-size: 28px;
    }

    /* Tempo do vídeo */
    .time-display {
      color: white;
      font-size: 14px;
      font-weight: 600;
      white-space: nowrap;
    }

    /* Controle de volume */
    .volume-control {
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .volume-slider {
      width: 80px;
      height: 4px;
      background: rgba(255,255,255,0.3);
      border-radius: 2px;
      cursor: pointer;
      position: relative;
    }

    .volume-filled {
      height: 100%;
      background: white;
      border-radius: 2px;
      width: 100%;
      transition: width 0.1s;
    }

    /* Botão de play central */
    .play-overlay {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 80px;
      height: 80px;
      background: rgba(33, 76, 206, 0.9);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      opacity: 1;
    }

    .play-overlay.hide {
      opacity: 0;
      pointer-events: none;
    }

    .play-overlay i {
      color: white;
      font-size: 36px;
      margin-left: 5px;
    }

    .play-overlay:hover {
      background: rgba(33, 76, 206, 1);
      transform: translate(-50%, -50%) scale(1.1);
    }

    /* Responsivo */
    @media (max-width: 768px) {
      .volume-control {
        display: none;
      }

      .time-display {
        font-size: 12px;
      }

      .control-btn {
        font-size: 18px;
      }

      .control-btn.play-pause {
        font-size: 24px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <header class="header">
      <a href="/videosfree"><button class="btn-voltar" aria-label="Voltar">&#8249;</button></a>
      <h1>Treino de Braço</h1>
    </header>

    <main class="video-section">
      <div class="video-player" id="videoPlayer">
        <!-- Vídeo -->
        <video id="video" poster="/img/img_vídeos/imagem2.jpg">
          <source src="/videos/treino-braco.mp4" type="video/mp4">
          <source src="/videos/treino-braco.webm" type="video/webm">
          Seu navegador não suporta vídeos HTML5.
        </video>

        <!-- Botão de play central -->
        <div class="play-overlay" id="playOverlay">
          <i class="fas fa-play"></i>
        </div>

        <!-- Controles do vídeo -->
        <div class="video-controls" id="videoControls">
          <!-- Barra de progresso -->
          <div class="progress-bar" id="progressBar">
            <div class="progress-filled" id="progressFilled"></div>
          </div>

          <!-- Controles -->
          <div class="controls-wrapper">
            <div class="controls-left">
              <!-- Play/Pause -->
              <button class="control-btn play-pause" id="playPauseBtn" aria-label="Play/Pause">
                <i class="fas fa-play"></i>
              </button>

              <!-- Volume -->
              <div class="volume-control">
                <button class="control-btn" id="volumeBtn" aria-label="Volume">
                  <i class="fas fa-volume-up"></i>
                </button>
                <div class="volume-slider" id="volumeSlider">
                  <div class="volume-filled" id="volumeFilled"></div>
                </div>
              </div>

              <!-- Tempo -->
              <span class="time-display">
                <span id="currentTime">0:00</span> / <span id="duration">0:00</span>
              </span>
            </div>

            <div class="controls-right">
              <!-- Velocidade -->
              <button class="control-btn" id="speedBtn" title="Velocidade de reprodução">
                <span style="font-size: 14px; font-weight: 600;">1x</span>
              </button>

              <!-- Tela cheia -->
              <button class="control-btn" id="fullscreenBtn" aria-label="Tela cheia">
                <i class="fas fa-expand"></i>
              </button>
            </div>
          </div>
        </div>
      </div>

      <section class="info-section">
        <p><strong>Professor:</strong> Kaio Berlim</p>
        <p><strong>Descrição:</strong> Séries de exercícios simples focados para os braços com duração de apenas 15 minutos.</p>
      </section>
    </main>
  </div>

  <footer class="sitefooter">
    <small>© 2025 PLANOB<br/>TODOS OS DIREITOS RESERVADOS.</small>
    <a href="#conteudo" class="to-top" aria-label="Voltar ao topo">
      <svg viewBox="0 0 24 24" aria-hidden="true">
        <path d="M12 7l7 7H5l7-7z"/>
      </svg>
    </a>
  </footer>

  <script>
    // Elementos
    const video = document.getElementById('video');
    const videoPlayer = document.getElementById('videoPlayer');
    const videoControls = document.getElementById('videoControls');
    const playOverlay = document.getElementById('playOverlay');
    const playPauseBtn = document.getElementById('playPauseBtn');
    const progressBar = document.getElementById('progressBar');
    const progressFilled = document.getElementById('progressFilled');
    const currentTimeEl = document.getElementById('currentTime');
    const durationEl = document.getElementById('duration');
    const volumeBtn = document.getElementById('volumeBtn');
    const volumeSlider = document.getElementById('volumeSlider');
    const volumeFilled = document.getElementById('volumeFilled');
    const speedBtn = document.getElementById('speedBtn');
    const fullscreenBtn = document.getElementById('fullscreenBtn');

    let hideControlsTimeout;

    // Play/Pause
    function togglePlay() {
      if (video.paused) {
        video.play();
        playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
        playOverlay.classList.add('hide');
      } else {
        video.pause();
        playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
        playOverlay.classList.remove('hide');
      }
    }

    playOverlay.addEventListener('click', togglePlay);
    playPauseBtn.addEventListener('click', togglePlay);
    video.addEventListener('click', togglePlay);

    // Atualizar progresso
    video.addEventListener('timeupdate', () => {
      const percent = (video.currentTime / video.duration) * 100;
      progressFilled.style.width = percent + '%';
      currentTimeEl.textContent = formatTime(video.currentTime);
    });

    // Duração do vídeo
    video.addEventListener('loadedmetadata', () => {
      durationEl.textContent = formatTime(video.duration);
    });

    // Barra de progresso
    progressBar.addEventListener('click', (e) => {
      const rect = progressBar.getBoundingClientRect();
      const percent = (e.clientX - rect.left) / rect.width;
      video.currentTime = percent * video.duration;
    });

    // Volume
    volumeBtn.addEventListener('click', () => {
      video.muted = !video.muted;
      updateVolumeIcon();
    });

    volumeSlider.addEventListener('click', (e) => {
      const rect = volumeSlider.getBoundingClientRect();
      const percent = (e.clientX - rect.left) / rect.width;
      video.volume = percent;
      volumeFilled.style.width = (percent * 100) + '%';
      updateVolumeIcon();
    });

    function updateVolumeIcon() {
      const icon = volumeBtn.querySelector('i');
      if (video.muted || video.volume === 0) {
        icon.className = 'fas fa-volume-mute';
      } else if (video.volume < 0.5) {
        icon.className = 'fas fa-volume-down';
      } else {
        icon.className = 'fas fa-volume-up';
      }
    }

    // Velocidade
    const speeds = [0.5, 0.75, 1, 1.25, 1.5, 2];
    let currentSpeedIndex = 2;

    speedBtn.addEventListener('click', () => {
      currentSpeedIndex = (currentSpeedIndex + 1) % speeds.length;
      video.playbackRate = speeds[currentSpeedIndex];
      speedBtn.querySelector('span').textContent = speeds[currentSpeedIndex] + 'x';
    });

    // Tela cheia
    fullscreenBtn.addEventListener('click', () => {
      if (!document.fullscreenElement) {
        videoPlayer.requestFullscreen();
        fullscreenBtn.innerHTML = '<i class="fas fa-compress"></i>';
      } else {
        document.exitFullscreen();
        fullscreenBtn.innerHTML = '<i class="fas fa-expand"></i>';
      }
    });

    // Mostrar/esconder controles
    videoPlayer.addEventListener('mousemove', () => {
      videoControls.classList.add('show');
      clearTimeout(hideControlsTimeout);
      hideControlsTimeout = setTimeout(() => {
        if (!video.paused) {
          videoControls.classList.remove('show');
        }
      }, 3000);
    });

    videoPlayer.addEventListener('mouseleave', () => {
      if (!video.paused) {
        videoControls.classList.remove('show');
      }
    });

    // Atalhos de teclado
    document.addEventListener('keydown', (e) => {
      if (e.code === 'Space') {
        e.preventDefault();
        togglePlay();
      } else if (e.code === 'ArrowRight') {
        video.currentTime += 5;
      } else if (e.code === 'ArrowLeft') {
        video.currentTime -= 5;
      } else if (e.code === 'KeyF') {
        fullscreenBtn.click();
      }
    });

    // Formatar tempo
    function formatTime(seconds) {
      const min = Math.floor(seconds / 60);
      const sec = Math.floor(seconds % 60);
      return `${min}:${sec.toString().padStart(2, '0')}`;
    }

    // Quando o vídeo termina
    video.addEventListener('ended', () => {
      playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
      playOverlay.classList.remove('hide');
    });
  </script>
</body>
</html>